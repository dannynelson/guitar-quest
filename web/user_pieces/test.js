// Generated by CoffeeScript 1.10.0
(function() {
  var Challenge, Notification, Piece, Promise, TempUser, User, UserPiece, _, database, guitarQuestUrl, objectIdString, pieceFactory, request, settings, sinon, userFactory, userPieceFactory;

  require('local_modules/test_helpers/server');

  settings = require('local_modules/settings');

  _ = require('lodash');

  Promise = require('bluebird');

  request = Promise.promisifyAll(require('request'), {
    suffix: 'Promised'
  });

  sinon = require('sinon');

  Promise = require('bluebird');

  objectIdString = require('objectid');

  database = require('local_modules/database');

  User = require('local_modules/models/user');

  TempUser = require('local_modules/models/temp_user');

  Piece = require('local_modules/models/piece');

  UserPiece = require('local_modules/models/user_piece');

  Notification = require('local_modules/models/notification');

  Challenge = require('local_modules/models/challenge');

  userPieceFactory = require('local_modules/models/user_piece/factory');

  pieceFactory = require('local_modules/models/piece/factory');

  userFactory = require('local_modules/models/user/factory');

  guitarQuestUrl = settings.server.url;

  describe('/user_pieces', function() {
    beforeEach(database.reset);
    before(function(done) {
      return this.serverUp(done);
    });
    after(function(done) {
      return this.serverDown(done);
    });
    beforeEach(function() {
      return this.authenticate().then((function(_this) {
        return function(arg) {
          _this.request = arg[0], _this.user = arg[1];
        };
      })(this));
    });
    return describe('POST /:_id/submit_video', function() {
      it('validates userPieceId', function() {
        return UserPiece.create(userPieceFactory.create()).then((function(_this) {
          return function(userPiece) {
            var submitPromise;
            submitPromise = _this.request.post(guitarQuestUrl + "/user_pieces/bam/submit_video").send({
              submissionVideoURL: 'https://guitar-quest-videos.s3-us-west-2.amazonaws.com/user_566496bff5401a666a5edb78/piece_55d8a2696ce78dc3156ca8d0_56649caa7ce0472729000001.33 PM',
              pieceId: objectIdString()
            });
            return expect(submitPromise).to.eventually.be.rejectedWith(/400/);
          };
        })(this));
      });
      it('validates submissionVideoURL', function() {
        return UserPiece.create(userPieceFactory.create()).then((function(_this) {
          return function(userPiece) {
            var submitPromise;
            submitPromise = _this.request.post(guitarQuestUrl + "/user_pieces/" + userPiece._id + "/submit_video").send({
              submissionVideoURL: '',
              pieceId: objectIdString()
            });
            return expect(submitPromise).to.eventually.be.rejectedWith(/400/);
          };
        })(this));
      });
      return it('calls submitVideo', function() {
        return UserPiece.create(userPieceFactory.create()).then((function(_this) {
          return function(userPiece) {
            sinon.stub(UserPiece.prototype, 'submitVideo', function() {
              return Promise.resolve(userPiece);
            });
            return _this.request.post(guitarQuestUrl + "/user_pieces/" + userPiece._id + "/submit_video").send({
              submissionVideoURL: 'https://guitar-quest-videos.s3-us-west-2.amazonaws.com/user_566496bff5401a666a5edb78/piece_55d8a2696ce78dc3156ca8d0_56649caa7ce0472729000001.33 PM',
              pieceId: objectIdString()
            });
          };
        })(this)).then((function(_this) {
          return function(response) {
            expect(response).to.be.ok;
            expect(UserPiece.prototype.submitVideo).to.have.been.calledWith({
              submissionVideoURL: 'https://guitar-quest-videos.s3-us-west-2.amazonaws.com/user_566496bff5401a666a5edb78/piece_55d8a2696ce78dc3156ca8d0_56649caa7ce0472729000001.33 PM',
              updatedBy: _this.user._id.toString()
            });
            return UserPiece.prototype.submitVideo.restore();
          };
        })(this));
      });
    });
  });

}).call(this);
